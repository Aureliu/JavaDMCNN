//  pattern set for noun and verb groups

pattern set chunks;

//  patterns for noun groups

ng := 		det-pos? [constit cat=adj]* [constit cat=n] |
		proper-noun |
		[constit cat=pro];

det-pos	    :=	[constit cat=det] |
		[constit cat=det]? [constit cat=n number=singular] "'s";

proper-noun :=	([token case=cap] | [undefinedCap])+;

when ng		add [ngroup];

//  patterns for active verb groups

vg :=		[constit cat=tv] |
		[constit cat=w] vg-inf |
		tv-vbe vg-ving;

vg-inf :=	[constit cat=v] |
		"be" vg-ving;

vg-ven :=	[constit cat=ven] |
		"been" vg-ving;

vg-ving :=	[constit cat=ving];

tv-vbe :=	"is" | "are" | "was" | "were";

when vg		add [constit cat=vgroup];

//  patterns for passive verb groups

vg-pass :=	tv-vbe [constit cat=ven] |
		[constit cat=w] "be" [constit cat=ven];

when vg-pass	add [constit cat=vgroup-pass];

//  pattern for infinitival verb groups

to-vg :=	vg-inf;

when to-vg	add [constit cat=vgroup-inf];
